<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <link rel="shortcut icon" href="http://s1.iconbird.com/ico/2013/9/452/w512h5121380477054shop.png" type="image/x-icon">
        <title>Sign-Up</title>
        <script crossorigin src="https://unpkg.com/react@15/dist/react.min.js"></script>
        <script crossorigin src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js"></script> 
        <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
    	<script type="text/babel">
    	
    	    class Form extends React.Component {
    	    
            constructor(props) {
                super(props);
                var email = props.email;
                var emailIsValid = this.validateEmail(email);
                var password = props.password;
                var confirm = props.confirm;
                var passwordIsValid = this.validatePassword(password);
                var firstname = props.firstname;
                var lastname = props.lastname;
                this.state = {email: email, password: password, emailValid: emailIsValid, passwordValid: passwordIsValid, firstname: firstname, lastname: lastname, confirm: confirm, confirmValid: true, submitInfo: ""};
               
                this.onEmailChange = this.onEmailChange.bind(this);
                this.onPasswordChange = this.onPasswordChange.bind(this);
                this.onFirstnameChange = this.onFirstnameChange.bind(this);
                this.onLastnameChange = this.onLastnameChange.bind(this);
                this.onConfirmChange = this.onConfirmChange.bind(this);
                this.handleSubmit = this.handleSubmit.bind(this);
            }
            //var a = 2;
            validatePassword(password){
    			if (/\s/.test(password))
    				return false;
    			if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*\w).{8,}/.test(password))
    				return true;
    			return false;
            }
            
            validateEmail(email) {
    			if (/^[A-Za-z\d._-]+@[A-Za-z\d.-]+\.[A-Za-z]{2,4}$/.test(email))
                    return true;
                return false;
            }
            
            onPasswordChange(event) {
                var val = event.target.value;
                var valid = this.validatePassword(val);
                this.setState({password: val, passwordValid: valid});
                if (event.target.value == this.state.confirm)
                    this.setState({confirmValid: true});
                else
                    this.setState({confirmValid: false});
            }
            
            onConfirmChange(event){
                this.setState({confirm: event.target.value});
                if (event.target.value == this.state.password)
                    this.setState({confirmValid: true});
                else
                    this.setState({confirmValid: false});
            }
            
            onLastnameChange(event) {
                this.setState({lastname: event.target.value});
            }
            
            onFirstnameChange(event) {
                var val = event.target.value;
                this.setState({firstname: val});
            }
            
            onEmailChange(event) {
            var val = event.target.value;
            var valid = this.validateEmail(val);
            this.setState({email: val, emailValid: valid});
            }
        
            handleSubmit(event) {
                if (this.state.emailValid === false)
                {
                    alert("Invalid email");
                    event.preventDefault();
                    return;
                }
                if (this.state.passwordValid === false)
                {
                    event.preventDefault();
                    alert("Invalid password")
                    return;
                }
                if (this.state.confirmValid === false)
                {
                    event.preventDefault();
                    alert("Invalid confirm")
                    return;
                }
            }
        
            render() {
                var confirmColor = this.state.confirmValid === true ? "✓":"✗";
                var passwordColor = this.state.passwordValid === true ? "✓":"✗";
                var emailColor = this.state.emailValid === true ? "✓":"✗";
                return (
                        <form id="signup" name="signup" method="post" onSubmit={this.handleSubmit} action="/signup" align="center">
                           
                            <h4>{this.submitInfo}</h4>
                            <input class="text" name="email" type="email"
                             value={this.state.email} placeholder="Email address"
                             onChange={this.onEmailChange} /><br/>
                             
                            <input class="text" type="text" name="firstname" 
                            value={this.state.firstname} placeholder="First name"
                            onChange={this.onFirstnameChange} /><br/>
                            
                            <input class="text" type="text" name="lastname" 
                            value={this.state.lastname} placeholder="Last name"
                            onChange={this.onLastnameChange} /><br/>
                        
                            <input name="password" type="password" id="password"
                             value={this.state.password} placeholder="Password"
                             onChange={this.onPasswordChange} /><br/>
                             
                            <input name="confirm" type="password" id="confirm_password"
                             value={this.state.confirm} placeholder="Confirm password"
                             onChange={this.onConfirmChange} /><br/>
                             
                             <h1>{emailColor} - {passwordColor} - {confirmColor}</h1>
                             
                             <input class="btn" type="submit" value="Sign-Up" id="submit" />
                         </form>
                     );
            }
        }
        
         ReactDOM.render(
             <Form />,
             document.getElementById('root')
         );
        </script>
        
        <style>
            @import url(https://fonts.googleapis.com/css?family=Open+Sans);
            .btn { display: inline-block; *display: inline; *zoom: 1; padding: 4px 10px 4px; margin-bottom: 0; font-size: 13px; line-height: 18px; color: #333333; text-align: center;text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); vertical-align: middle; background-color: #f5f5f5; background-image: -moz-linear-gradient(top, #ffffff, #e6e6e6); background-image: -ms-linear-gradient(top, #ffffff, #e6e6e6); background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6)); background-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6); background-image: -o-linear-gradient(top, #ffffff, #e6e6e6); background-image: linear-gradient(top, #ffffff, #e6e6e6); background-repeat: repeat-x; filter: progid:dximagetransform.microsoft.gradient(startColorstr=#ffffff, endColorstr=#e6e6e6, GradientType=0); border-color: #e6e6e6 #e6e6e6 #e6e6e6; border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); border: 1px solid #e6e6e6; -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px; -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); cursor: pointer; *margin-left: .3em; }
            .btn:hover, .btn:active, .btn.active, .btn.disabled, .btn[disabled] { background-color: #e6e6e6; }
            .btn-large { padding: 9px 14px; font-size: 15px; line-height: normal; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }
            .btn:hover { color: #333333; text-decoration: none; background-color: #e6e6e6; background-position: 0 -15px; -webkit-transition: background-position 0.1s linear; -moz-transition: background-position 0.1s linear; -ms-transition: background-position 0.1s linear; -o-transition: background-position 0.1s linear; transition: background-position 0.1s linear; }
            .btn-primary, .btn-primary:hover { text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); color: #ffffff; }
            .btn-primary.active { color: rgba(255, 255, 255, 0.75); }
            .btn-primary { background-color: #4a77d4; background-image: -moz-linear-gradient(top, #6eb6de, #4a77d4); background-image: -ms-linear-gradient(top, #6eb6de, #4a77d4); background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#6eb6de), to(#4a77d4)); background-image: -webkit-linear-gradient(top, #6eb6de, #4a77d4); background-image: -o-linear-gradient(top, #6eb6de, #4a77d4); background-image: linear-gradient(top, #6eb6de, #4a77d4); background-repeat: repeat-x; filter: progid:dximagetransform.microsoft.gradient(startColorstr=#6eb6de, endColorstr=#4a77d4, GradientType=0);  border: 1px solid #3762bc; text-shadow: 1px 1px 1px rgba(0,0,0,0.4); box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); }
            .btn-primary:hover, .btn-primary:active, .btn-primary.active, .btn-primary.disabled, .btn-primary[disabled] { filter: none; background-color: #4a77d4; }
            .btn-block { width: 100%; display:block; }
            
            * { -webkit-box-sizing:border-box; -moz-box-sizing:border-box; -ms-box-sizing:border-box; -o-box-sizing:border-box; box-sizing:border-box; }
            
            html { width: 100%; height:100%; overflow:hidden; }
            
            body { 
            	width: 100%;
            	height:100%;
            	font-family: 'Open Sans', sans-serif;
            	background: #092756;
            	background: -moz-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%),-moz-linear-gradient(top,  rgba(57,173,219,.25) 0%, rgba(42,60,87,.4) 100%), -moz-linear-gradient(-45deg,  #670d10 0%, #092756 100%);
            	background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -webkit-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -webkit-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
            	background: -o-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -o-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -o-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
            	background: -ms-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -ms-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -ms-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
            	background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), linear-gradient(to bottom,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), linear-gradient(135deg,  #670d10 0%,#092756 100%);
            	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3E1D6D', endColorstr='#092756',GradientType=1 );
            }
            .regForm {
                position: absolute;
            	top: 25%;
            	left: 50%;
            	margin: -150px 0 0 -150px;
            	width:300px;
            	height:300px;
            }
            
            .holder {
                position: relative;
            }
            
            .block {
                position:absolute;
                left:0;
                bottom:0;
                right:0;
                top:0;
                display:none;
            }    
            
            .holder:hover .block{
                display: block;
            }
            
            .about {
                position:fixed;
                bottom:10px;
                text-align: center;
                width: 100%;
                color: #fff; 
                text-shadow: 0 0 10px rgba(0,0,0,0.3); 
                letter-spacing:1px;
            }
            h1 { color: #fff; text-shadow: 0 0 10px rgba(0,0,0,0.3); letter-spacing:1px; text-align:center; }
            h4 { color: red; }
            input { 
            	width: 100%; 
            	margin-bottom: 10px; 
            	background: rgba(0,0,0,0.3);
            	border: none;
            	outline: none;
            	padding: 10px;
            	font-size: 13px;
            	color: #fff;
            	text-shadow: 1px 1px 1px rgba(0,0,0,0.3);
            	border: 1px solid rgba(0,0,0,0.3);
            	border-radius: 4px;
            	box-shadow: inset 0 -5px 45px rgba(100,100,100,0.2), 0 1px 1px rgba(255,255,255,0.2);
            	-webkit-transition: box-shadow .5s ease;
            	-moz-transition: box-shadow .5s ease;
            	-o-transition: box-shadow .5s ease;
            	-ms-transition: box-shadow .5s ease;
            	transition: box-shadow .5s ease;
            }
            input:focus { box-shadow: inset 0 -5px 45px rgba(100,100,100,0.4), 0 1px 1px rgba(255,255,255,0.2); }
        </style>
        </head>
    <body>
        <div class="regForm">
            <div align="center" class="signin">
                <h1>Sign-Up</h1>
                <div align="center" style="color: #EF8354" class="errors">
                    <p id="message">{{signup_error}}</p>
                </div>
                <div id="root" align="center" class="form"></div>
            </div>
            <div align="center" class="signin">
                <h1>Already have an account?</h1>
                <input type="button" value="Sign-In" onclick='location.href="./signin"'/>
            </div>
        </div>
        <div class=about>
            © Copyright by Ilya Butyshkis and Roman Ershov, Saint Petersburg, 2018
        </div>
     </body>
</html>